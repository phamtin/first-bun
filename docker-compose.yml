services:
    nginx:
        image: nginx:1.28-alpine
        container_name: "nginx"
        volumes:
            - ./apps/api/deploy/prod/nginx.conf:/etc/nginx/nginx.conf
            - ./apps/api/deploy/prod/logs:/var/log/nginx
        ports:
            - "8080:8080"
            - "443:443" # HTTPS
        restart: unless-stopped
        network_mode: host

    # nats:
    #     image: nats:latest
    #     container_name: "nats"
    #     ports:
    #         - "4222:4222"
    #         - "6222:6222"
    #     restart: unless-stopped
    #     network_mode: host
    #     healthcheck:
    #         test: ["CMD", "nats", "cli", "health"]
    #         interval: 10s
    #         timeout: 5s
    #         retries: 5
    #         start_period: 5s    

    redis-stack:
        image: redis:8.0.2-alpine
        container_name: "redis"
        volumes:
            - ./data/redis:/data
        restart: always
        ports:
            - "6379:6379"
        healthcheck:
            test: ["CMD", "redis-cli", "-h", "localhost", "ping"]
            interval: 10s
            retries: 5
            start_period: 5s
            timeout: 5s
        network_mode: host
        deploy:
            resources:
                limits:
                    memory: 250M

    api:
        image: first-bun-api:latest
        env_file:
            - .env
        entrypoint: []
        command: ["bun", "run", "build/index.js"]
        expose:
            - "9000"  # Expose only within the network
        restart: always
        depends_on:
            redis-stack:
                condition: service_healthy
        network_mode: host

    worker:
        image: first-bun-worker:latest
        env_file:
            - .env
        restart: always
        network_mode: host
        depends_on:
            - api